<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Android</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://abelsdf.github.io/"/>
  <updated>2017-07-15T14:35:17.004Z</updated>
  <id>https://abelsdf.github.io/</id>
  
  <author>
    <name>单黛丰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用RxJava+Retrofit+Kotlin打造新闻APP</title>
    <link href="https://abelsdf.github.io/2017/07/15/%E6%96%B0%E9%97%BBAPP/"/>
    <id>https://abelsdf.github.io/2017/07/15/新闻APP/</id>
    <published>2017-07-15T12:19:30.345Z</published>
    <updated>2017-07-15T14:35:17.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从 Kotlin 被 google 选中为 Android 官方编程语言之一，业内的关注度就一直在上升。笔者也是第一次使用Kotlin写一个完整的程序，边做边学习。</p>
<h2 id="Rxjava"><a href="#Rxjava" class="headerlink" title="Rxjava"></a>Rxjava</h2><p>RxJava是Reactive Extensions的Java VM实现：用于通过使用observable序列来组合异步和基于事件的程序的库。</p>
<blockquote>
<p>github地址 <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">https://github.com/ReactiveX/RxJava</a></p>
</blockquote>
<h2 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a>Retrofit</h2><p>Retrofit是Square公司开源的一个高质量高效率的http库，它将我们自己开发的底层的代码和细节都封装了起来,使用它可以简化我们网络操作的工作，提高效率和正确率.</p>
<ul>
<li><p>Retrofit将HTTP API转换为Java接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GitHubService</span> </span>&#123;</div><div class="line">  <span class="meta">@GET</span>(<span class="string">"users/&#123;user&#125;/repos"</span>)</div><div class="line">  Call&lt;List&lt;Repo&gt;&gt; listRepos(<span class="meta">@Path</span>(<span class="string">"user"</span>) String user);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Retrofit类生成一个GitHubService接口的实例</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">  .baseUrl(<span class="string">"https://api.github.com/"</span>)</div><div class="line">  .build();</div><div class="line"></div><div class="line">GitHubService service = retrofit.create(GitHubService.class);</div></pre></td></tr></table></figure>
</li>
<li><p>Call创建的每个都GitHubService可以向远程Web服务器发送同步或异步HTTP请求。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Call&lt;List&lt;Repo&gt;&gt; repos = service.listRepos(<span class="string">"octocat"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h2><p> Kotlin 被 google 选中为 Android 官方编程语言之一,kotlin 与 java百分百兼容。java能做到的kotlin也能做到，而且kotlin还具有很多优秀的高级语言特效</p>
<ul>
<li><p>使用一行代码创建一个包含 getters、 setters、 equals()、 hashCode()、 toString() 以及 copy() 的 POJO：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function">data class <span class="title">Customer</span><span class="params">(val name: String, val email: String, val company: String)</span></span></div></pre></td></tr></table></figure>
</li>
<li><p>或者使用 lambda 表达式来过滤列表：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">val positiveNumbers = list.filter &#123; it &gt; <span class="number">0</span> &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>想要单例？创建一个 object 就可以了：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">object ThisIsASingleton &#123;</div><div class="line">  val companyName: String = <span class="string">"JetBrains"</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="本项目使用的依赖"><a href="#本项目使用的依赖" class="headerlink" title="本项目使用的依赖"></a>本项目使用的依赖</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">implementation <span class="string">"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"</span></div><div class="line">compile <span class="string">"org.jetbrains.anko:anko-commons:$anko_version"</span></div><div class="line">implementation <span class="string">'com.android.support.constraint:constraint-layout:1.0.2'</span></div><div class="line">implementation <span class="string">'com.android.support:recyclerview-v7:26.0.0-beta2'</span></div><div class="line">implementation <span class="string">'com.android.support:design:26.0.0-beta2'</span></div><div class="line">implementation <span class="string">'com.android.support:appcompat-v7:26.0.0-beta2'</span></div><div class="line">implementation <span class="string">'com.google.code.gson:gson:2.8.1'</span></div><div class="line"><span class="comment">//Gson 解析json</span></div><div class="line">implementation <span class="string">'com.squareup.retrofit2:converter-gson:2.3.0'</span></div><div class="line">implementation <span class="string">'com.squareup.retrofit2:adapter-rxjava:2.3.0'</span></div><div class="line">implementation <span class="string">'io.reactivex.rxjava2:rxjava:2.1.1'</span></div><div class="line">implementation <span class="string">'io.reactivex.rxjava2:rxandroid:2.0.1'</span></div><div class="line"><span class="comment">//图片加载</span></div><div class="line">implementation <span class="string">'com.github.bumptech.glide:glide:4.0.0-RC1'</span></div><div class="line">annotationProcessor <span class="string">'com.github.bumptech.glide:compiler:4.0.0-RC1'</span></div><div class="line"><span class="comment">//SmartRefreshLayout</span></div><div class="line">compile <span class="string">'com.scwang.smartrefresh:SmartRefreshLayout:1.0.1'</span></div><div class="line">implementation <span class="string">'com.squareup.retrofit2:adapter-rxjava2:2.3.0'</span></div><div class="line"><span class="comment">//Gif</span></div><div class="line">compile <span class="string">'pl.droidsonroids.gif:android-gif-drawable:1.2.3'</span></div></pre></td></tr></table></figure>
<h2 id="首页布局"><a href="#首页布局" class="headerlink" title="首页布局"></a>首页布局</h2><p>activity_main.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/drawerLayout"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.abels.android.news.MainActivity"</span></div><div class="line">    <span class="attr">tools:openDrawer</span>=<span class="string">"start"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">        <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/main_content"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/appbar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span>&gt;</div><div class="line">            <span class="comment">&lt;!--android:layout_height="?attr/actionBarSize"--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></div><div class="line">                <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll"</span></div><div class="line">                <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span>/&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tabs"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                /&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/viewpager"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/navView"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></div><div class="line">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header_main"</span></div><div class="line">        <span class="attr">app:menu</span>=<span class="string">"@menu/activity_main_drawer"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>fragment_news.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">com.scwang.smartrefresh.layout.SmartRefreshLayout</span></span></div><div class="line">  <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">  <span class="attr">android:id</span>=<span class="string">"@+id/refreshLayout"</span></div><div class="line">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">pl.droidsonroids.gif.GifImageView</span></span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"130dp"</span></div><div class="line">      <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></div><div class="line">      <span class="attr">android:src</span>=<span class="string">"@drawable/refresh"</span>/&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">      <span class="attr">android:id</span>=<span class="string">"@+id/recycleview"</span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">      <span class="attr">android:background</span>=<span class="string">"#fff"</span></div><div class="line">      <span class="attr">android:overScrollMode</span>=<span class="string">"never"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">com.scwang.smartrefresh.layout.SmartRefreshLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>API<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ApiService</span> </span>&#123;</div><div class="line">  <span class="comment">//社会新闻</span></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * type 新闻类型</div><div class="line">     * key 申请的API KEY</div><div class="line">     * num 指定返回数量，最大50</div><div class="line">     * page 翻页，每页输出数量跟随num参数</div><div class="line">     */</div><div class="line">    <span class="meta">@GET</span>(<span class="string">"&#123;type&#125;/"</span>)</div><div class="line">    <span class="function">fun <span class="title">getNewsData</span><span class="params">(@Path(<span class="string">"type"</span>)</span> type: String,</span></div><div class="line">                    @<span class="title">Query</span><span class="params">(<span class="string">"key"</span>)</span> key: String,</div><div class="line">                    @<span class="title">Query</span><span class="params">(<span class="string">"num"</span>)</span> num: String,</div><div class="line">                    @<span class="title">Query</span><span class="params">(<span class="string">"page"</span>)</span> page: Int): Observable&lt;News&gt;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//单例模式</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApiUtils</span> <span class="title">private</span> <span class="title">constructor</span>() </span>&#123;</div><div class="line">    <span class="keyword">private</span> var sRetrofit: Retrofit? = <span class="keyword">null</span></div><div class="line">    <span class="comment">//初始化</span></div><div class="line">    init &#123;</div><div class="line">        sRetrofit = Retrofit.Builder()</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())</div><div class="line">                .baseUrl(BASE_URL)</div><div class="line">                .build()</div><div class="line">    &#125;</div><div class="line">    companion object &#123;</div><div class="line"></div><div class="line">        <span class="function">fun <span class="title">getInstance</span><span class="params">()</span>: ApiUtils </span>&#123;</div><div class="line">            <span class="keyword">return</span> Inner.instance</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> object Inner &#123;</div><div class="line">        val instance = ApiUtils()</div><div class="line">    &#125;</div><div class="line">    fun &lt;T&gt; create(service: Class&lt;T&gt;): T &#123;</div><div class="line">        <span class="keyword">return</span> sRetrofit!!.create(service)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接口调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">fun getData(num: String, type: String) &#123;</div><div class="line">  val retrofit = ApiUtils.getInstance().create(ApiService::class.java)</div><div class="line">  retrofit.getNewsData(mType.getTypeUrl(), APIKEY, num, page)</div><div class="line">          .subscribeOn(Schedulers.io())</div><div class="line">          .observeOn(AndroidSchedulers.mainThread())</div><div class="line">          .subscribe(object : Observer&lt;News&gt; &#123;</div><div class="line">              override fun onComplete() &#123;</div><div class="line">                  Log.d(&quot;onComplete&quot;, &quot;onComplete&quot;)</div><div class="line">              &#125;</div><div class="line">              override fun onNext(t: News) &#123;</div><div class="line">                  if (t.code == 200) &#123;</div><div class="line">                      page++</div><div class="line">                      for (i in 0..t.newslist!!.size - 1) &#123;</div><div class="line">                          if (type.equals(&quot;refresh&quot;)) &#123;</div><div class="line">                              mNewsListBeans!!.add(0, t.newslist!![i])</div><div class="line">                          &#125; else &#123;</div><div class="line">                              mNewsListBeans!!.add(mNewsListBeans.size, t.newslist!![i])</div><div class="line">                          &#125;</div><div class="line">                      &#125;</div><div class="line"></div><div class="line">                  &#125; else &#123;</div><div class="line">                      context.toast(&quot;无最新数据！&quot;)</div><div class="line">                  &#125;</div><div class="line">                  if (mRefreshLayout!!.isRefreshing) &#123;</div><div class="line">                      mRefreshLayout!!.finishRefresh(1000)</div><div class="line">                  &#125;</div><div class="line">                  if (mRefreshLayout!!.isLoading) &#123;</div><div class="line">                      mRefreshLayout!!.finishLoadmore()</div><div class="line">                  &#125;</div><div class="line">                  mRefreshLayout!!.setOnMultiPurposeListener(object : OnMultiPurposeListener &#123;</div><div class="line">                      override fun onFooterPulling(footer: RefreshFooter?, percent: Float, offset: Int, footerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onLoadmore(refreshlayout: RefreshLayout?) &#123;&#125;</div><div class="line">                      override fun onHeaderReleasing(header: RefreshHeader?, percent: Float, offset: Int, headerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onHeaderStartAnimator(header: RefreshHeader?, headerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onStateChanged(refreshLayout: RefreshLayout?, oldState: RefreshState?, newState: RefreshState?) &#123;</div><div class="line">                          mNewAdapter!!.notifyDataSetChanged()</div><div class="line">                      &#125;</div><div class="line">                      override fun onFooterFinish(footer: RefreshFooter?) &#123;</div><div class="line">                          mNewAdapter!!.notifyDataSetChanged()</div><div class="line">                      &#125;</div><div class="line">                      override fun onFooterStartAnimator(footer: RefreshFooter?, footerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onFooterReleasing(footer: RefreshFooter?, percent: Float, offset: Int, footerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onHeaderPulling(header: RefreshHeader?, percent: Float, offset: Int, headerHeight: Int, extendHeight: Int) &#123;&#125;</div><div class="line">                      override fun onRefresh(refreshlayout: RefreshLayout?) &#123;&#125;</div><div class="line">                      override fun onHeaderFinish(header: RefreshHeader?) &#123;&#125;</div><div class="line">                  &#125;)</div><div class="line">                  //mNewAdapter!!.notifyDataSetChanged()</div><div class="line">              &#125;</div><div class="line">              override fun onSubscribe(d: Disposable) &#123;</div><div class="line">                  Log.d(&quot;Disposable&quot;, &quot;Disposable&quot;)</div><div class="line">              &#125;</div><div class="line">              override fun onError(e: Throwable) &#123;</div><div class="line">                  context.toast(&quot;请求新闻失败!&quot;)</div><div class="line">              &#125;</div><div class="line">          &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="数据绑定到RecycleView-上"><a href="#数据绑定到RecycleView-上" class="headerlink" title="数据绑定到RecycleView 上"></a>数据绑定到RecycleView 上</h2><p>NewsAdapter 继承RecyclerView.Adapter<newsadapter.newsholder><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">class NewsAdapter(var mContext: Context, var mNewListBeans: MutableList&lt;NewslistBean&gt;?) : RecyclerView.Adapter&lt;NewsAdapter.NewsHolder&gt;() &#123;</div><div class="line">  override fun getItemCount(): Int &#123;</div><div class="line">      if (mNewListBeans == null) &#123;</div><div class="line">          return 0</div><div class="line">      &#125; else &#123;</div><div class="line">          return mNewListBeans!!.size</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  override fun onBindViewHolder(holder: NewsHolder?, position: Int) &#123;</div><div class="line">      holder!!.itemView.tvName.text = mNewListBeans!![position].title</div><div class="line">      holder!!.itemView.tvSign.text = mNewListBeans!![position].ctime</div><div class="line">      if (mNewListBeans!![position].picUrl != null &amp;&amp; !mNewListBeans!![position].picUrl.equals("")) &#123;</div><div class="line">          holder!!.itemView.ivPic.visibility = View.VISIBLE</div><div class="line">          Glide.with(mContext)</div><div class="line">                  .load(mNewListBeans!![position].picUrl)</div><div class="line">                  .into(holder!!.itemView.ivPic)</div><div class="line">      &#125; else &#123;</div><div class="line">          holder!!.itemView.ivPic.visibility = View.GONE</div><div class="line">      &#125;</div><div class="line">      holder!!.itemView.setOnClickListener &#123;</div><div class="line">          var intent = Intent(mContext, NewsDetailActivity::class.java)</div><div class="line">          intent.putExtra("pic", mNewListBeans!![position].picUrl)</div><div class="line">          intent.putExtra("url", mNewListBeans!![position].url)</div><div class="line">          mContext.startActivity(intent)</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">  override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): NewsHolder &#123;</div><div class="line">      var view = LayoutInflater.from(mContext).inflate(R.layout.news_item, parent, false)</div><div class="line"></div><div class="line">      return NewsHolder(view)</div><div class="line">  &#125;</div><div class="line">  class NewsHolder(itemView: View?) : RecyclerView.ViewHolder(itemView)</div><div class="line">&#125;</div></pre></td></tr></table></figure></newsadapter.newsholder></p>
<p>RecyclerView配置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mNewAdapter = NewsAdapter(context, mNewsListBeans)</div><div class="line">recycleView.layoutManager = LinearLayoutManager(context)</div><div class="line">recycleView.adapter = <span class="function">mNewAdapter</span></div><div class="line"></div><div class="line"><span class="title">if</span> <span class="params">(mNewsListBeans.size == <span class="number">0</span>)</span> &#123;</div><div class="line">  mRefreshLayout!!.autoRefresh()</div><div class="line">&#125;</div><div class="line">mRefreshLayout!!.setOnRefreshListener &#123;</div><div class="line">  getData(<span class="string">"10"</span>, <span class="string">"refresh"</span>)</div><div class="line">&#125;</div><div class="line">mRefreshLayout!!.setOnLoadmoreListener &#123;</div><div class="line">  getData(<span class="string">"10"</span>, <span class="string">"load"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>  第一次写博客，贴了好多代码，而且还有好多代码没贴上去，果然语文不好。总的来说这只是一个很简单的APP，虽然中间遇到了一些坑，也只能当做是来练手了。下次再写博客争取多文字少代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;自从 Kotlin 被 google 选中为 Android 官方编程语言之一，业内的关注度就一直在上升。笔者也是第一次使用Kotlin写一
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你好</title>
    <link href="https://abelsdf.github.io/2017/07/13/hello-world/"/>
    <id>https://abelsdf.github.io/2017/07/13/hello-world/</id>
    <published>2017-07-13T10:18:03.940Z</published>
    <updated>2017-07-13T13:34:14.887Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到单黛丰的个人博客.<br><br>本博客用于自身学习笔记.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎来到单黛丰的个人博客.&lt;br&gt;&lt;br&gt;本博客用于自身学习笔记.&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
